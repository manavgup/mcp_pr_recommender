# ===============================================================
# 🔍  Lint & Static Analysis - Code Quality Gate
# ===============================================================
#
#   - runs each linter in its own matrix job for visibility
#   - mirrors the actual CLI commands used locally (no `make`)
#   - ensures fast-failure isolation: one failure doesn't hide others
#   - each job installs the project in dev-editable mode
#   - logs are grouped and plain-text for readability
# ---------------------------------------------------------------

name: Lint

on:
  pull_request:
    branches: [ master, main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          path: mcp_pr_recommender

      - name: Checkout shared library
        uses: actions/checkout@v4
        with:
          repository: manavgup/mcp_shared_lib
          path: mcp_shared_lib

      - name: Install Git
        run: |
          sudo apt-get update
          sudo apt-get install -y git

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: mcp_pr_recommender/.venv
          key: >-
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{
            hashFiles('mcp_pr_recommender/**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        working-directory: mcp_pr_recommender
        run: poetry install --no-interaction --no-root

      - name: Run linting
        working-directory: mcp_pr_recommender
        run: |
          make lint
